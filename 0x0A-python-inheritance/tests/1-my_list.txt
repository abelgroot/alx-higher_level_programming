# Test with a list of positive integers
>>> MyList = __import__('1-my_list').MyList
>>> my_list = MyList()
>>> my_list.append(1)
>>> my_list.append(4)
>>> my_list.append(2)
>>> my_list.append(3)
>>> my_list.append(5)
>>> print(my_list)
[1, 4, 2, 3, 5]
>>> my_list.print_sorted()
[1, 2, 3, 4, 5]
>>> print(my_list)
[1, 4, 2, 3, 5]

# Test with an empty list
>>> empty_list = MyList()
>>> empty_list.print_sorted()
[]

# Test with a list containing duplicate elements
>>> my_list_with_duplicates = MyList()
>>> my_list_with_duplicates.append(3)
>>> my_list_with_duplicates.append(1)
>>> my_list_with_duplicates.append(3)
>>> my_list_with_duplicates.append(2)
>>> print(my_list_with_duplicates)
[3, 1, 3, 2]
>>> my_list_with_duplicates.print_sorted()
[1, 2, 3, 3]
>>> print(my_list_with_duplicates)
[3, 1, 3, 2]

# Test with a list that is already sorted
>>> sorted_list = MyList([1, 2, 3, 4, 5])
>>> sorted_list.print_sorted()
[1, 2, 3, 4, 5]
>>> print(sorted_list)
[1, 2, 3, 4, 5]

# Test with a list in reverse order
>>> reverse_list = MyList([5, 4, 3, 2, 1])
>>> reverse_list.print_sorted()
[1, 2, 3, 4, 5]
>>> print(reverse_list)
[5, 4, 3, 2, 1]

# Test with a list that contains non-integer elements (error handling)
>>> invalid_list = MyList()
>>> invalid_list.append(1)
>>> invalid_list.append("string")
>>> invalid_list.append(3)
>>> invalid_list.print_sorted()
Error: All elements must be integers.
>>> print(invalid_list)
[1, 'string', 3]
